name: Flask CI

on:
  push:
    # branches: [main]
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Set up Python 3.8 environment
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  deploy-tutorial:
    # Only run this job if "build" has ended successfully
    needs:
      - build
      
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Set up Python 3.8 environment
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      # Elastic Beanstalk CLI version
      - name: Get EB CLI version
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
          eb --version
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      
      # Create the Elastic Beanstalk application
      - name: Create EBS application
        run: |
          cd tutorial
          eb init -p python-3.8 tutorial --region ap-southeast-1
          (eb use interactive-tutorial-server && eb status interactive-tutorial-server && eb deploy) || eb create interactive-tutorial-server
          eb setenv APP_SECRET_KEY=${{ secrets.APP_SECRET_KEY }} GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} SQLALCHEMY_DATABASE_URI=${{ secrets.SQLALCHEMY_DATABASE_URI }} ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} S3_LEARNER_BUCKET_NAME=${{ secrets.S3_LEARNER_BUCKET_NAME }} SAMPLE_TUTORIAL_ID=${{ secrets.SAMPLE_TUTORIAL_ID }}

  deploy-auth:
    # Only run this job if "build" has ended successfully
    needs:
      - build
      
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Set up Python 3.8 environment
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      # Elastic Beanstalk CLI version
      - name: Get EB CLI version
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli --upgrade
          eb --version
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      
      # Create the Elastic Beanstalk application
      - name: Create EBS application
        run: |
          cd auth
          eb init -p python-3.8 auth --region ap-southeast-1
          (eb use interactive-tutorial-auth-server && eb status interactive-tutorial-auth-server && eb deploy) || eb create interactive-tutorial-auth-server
          eb setenv APP_SECRET_KEY=${{ secrets.APP_SECRET_KEY }} GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} SQLALCHEMY_DATABASE_URI=${{ secrets.SQLALCHEMY_DATABASE_URI }} ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} REACT_APP_TUTORIAL_URL=${{ secrets.REACT_APP_TUTORIAL_URL }}